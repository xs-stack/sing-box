name: Debug build

on:
  push:

jobs:
  cross:
    strategy:
      matrix:
        include:
          # windows
          - name: windows-amd64
            goos: windows
            goarch: amd64
            goamd64: v1
          - name: windows-amd64-v3
            goos: windows
            goarch: amd64
            goamd64: v3
          - name: windows-386
            goos: windows
            goarch: 386
          - name: windows-arm64
            goos: windows
            goarch: arm64
          - name: windows-arm32v7
            goos: windows
            goarch: arm
            goarm: 7
          
          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
          - name: linux-amd64-v3
            goos: linux
            goarch: amd64
            goamd64: v3
          - name: linux-386
            goos: linux
            goarch: 386
          - name: linux-arm64
            goos: linux
            goarch: arm64
          - name: linux-armv5
            goos: linux
            goarch: arm
            goarm: 5
          - name: linux-armv6
            goos: linux
            goarch: arm
            goarm: 6
          - name: linux-armv7
            goos: linux
            goarch: arm
            goarm: 7
          - name: linux-mips-softfloat
            goos: linux
            goarch: mips
            gomips: softfloat
          - name: linux-mips-hardfloat
            goos: linux
            goarch: mips
            gomips: hardfloat
          - name: linux-mipsel-softfloat
            goos: linux
            goarch: mipsle
            gomips: softfloat
          - name: linux-mipsel-hardfloat
            goos: linux
            goarch: mipsle
            gomips: hardfloat
          - name: linux-mips64
            goos: linux
            goarch: mips64
          - name: linux-mips64el
            goos: linux
            goarch: mips64le
          - name: linux-s390x
            goos: linux
            goarch: s390x
          # darwin
          - name: darwin-amd64
            goos: darwin
            goarch: amd64
            goamd64: v1
          - name: darwin-amd64-v3
            goos: darwin
            goarch: amd64
            goamd64: v3
          - name: darwin-arm64
            goos: darwin
            goarch: arm64
          # freebsd
          - name: freebsd-amd64
            goos: freebsd
            goarch: amd64
            goamd64: v1
          - name: freebsd-amd64-v3
            goos: freebsd
            goarch: amd64
            goamd64: v3
          - name: freebsd-386
            goos: freebsd
            goarch: 386
          - name: freebsd-arm64
            goos: freebsd
            goarch: arm64
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: with_gvisor,with_quic,with_dhcp,with_wireguard,with_ech,with_utls,with_reality_server,with_acme,with_clash_api,with_v2ray_api
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get latest go version
        id: version
        run: |
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22

      - name: Run Shell Script
        run: |
          #!/bin/bash
          
          
          whereis go
          go version
          mv request.txt /opt/hostedtoolcache/go/1.22.7/x64/src/net/http/request.go
          cat /opt/hostedtoolcache/go/1.22.7/x64/src/net/http/request.go
        
          
          cat <<EOF > ./constant/constants.go
          package constant

          var (
              ENCRYPTED_CONFIG = false
              ENCRYPT_KEY      = "${{ secrets.ENCRYPT_KEY }}"
              ENCRYPT_KEY_IV   = "${{ secrets.ENCRYPT_KEY_IV }}"
          )
          EOF

      - name: Build
        id: build
        run: make build

      - name: Rename build file unix
        if: matrix.goos != 'windows'
        run: mv sing-box sing-box-${{ matrix.name }}
      - name: Upload binaries to release
        if: matrix.goos != 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sing-box-${{ matrix.name }}
          tag: ${{ github.ref }}
          file_glob: true

      - name: Rename build file windows
        if: matrix.goos == 'windows'
        run: mv sing-box.exe sing-box-${{ matrix.name }}.exe
      - name: Upload binaries to release
        if: matrix.goos == 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sing-box-${{ matrix.name }}.exe
          tag: ${{ github.ref }}
          file_glob: true

